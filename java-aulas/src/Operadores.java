public class Operadores {

    // sout √© o atalho para escrever System.out.println no IntelliJ

    public static void main(String[] args) {

        // üî§ CONCATENA√á√ÉO DE STRINGS
        String nomeCompleto = "Linguagem " + "Java";
        System.out.println(nomeCompleto); // Linguagem Java

        // üßÆ CONCATENA√á√ÉO COM N√öMEROS (tudo vira texto)
        System.out.println("1" + "1"); // 11
        System.out.println("1" + 1);   // 11

        // ‚ûï INCREMENTO E DECREMENTO
        int numero = 1;
        System.out.println(numero++); // imprime 1, depois incrementa para 2
        System.out.println(numero--); // imprime 2, depois decrementa para 1

        // ‚ùó NEGA√á√ÉO L√ìGICA
        boolean verdadeiro = true;
        System.out.println(!verdadeiro); // false

        // ü§î OPERADOR TERN√ÅRIO (condi√ß√£o simples)
        int a = 5;
        int b = 6;
        int resultadoTernario = (a == b) ? 1 : 0;
        System.out.println(resultadoTernario); // 0 (pois 5 != 6)

        // üîÅ CONDICIONAL IF/ELSE TRADICIONAL
        String resultado;
        if (a == b) {
            resultado = "verdadeiro";
        } else {
            resultado = "falso";
        }
        System.out.println(resultado); // falso

        // ‚öñÔ∏è OPERADORES RELACIONAIS
        int primeiroNum = 1;
        int segundoNum = 2;

        boolean igual = primeiroNum == segundoNum;
        boolean diferente = primeiroNum != segundoNum;
        boolean menorOuIgual = primeiroNum <= segundoNum;
        boolean maiorOuIgual = primeiroNum >= segundoNum;

        System.out.println("N√∫mero 1 √© igual ao n√∫mero 2? : " + igual);
        System.out.println("N√∫mero 1 √© diferente do n√∫mero 2? : " + diferente);
        System.out.println("N√∫mero 1 √© menor ou igual ao n√∫mero 2? : " + menorOuIgual);
        System.out.println("N√∫mero 1 √© maior ou igual ao n√∫mero 2? : " + maiorOuIgual);

        // üß† COMPARANDO STRINGS (aten√ß√£o ao uso de refer√™ncias)
        String nomeUm = "Mendes";
        String nomeDois = "Mendes";

        System.out.println(nomeUm == nomeDois);           // true (internamente √© o mesmo objeto por otimiza√ß√£o do Java)
        System.out.println(nomeUm.equals(nomeDois));      // true (compara o conte√∫do)

        // üîÄ OPERADORES L√ìGICOS (AND / OR)
        boolean condicao1 = false;
        boolean condicao2 = true;

        // E l√≥gico (AND): s√≥ entra se as duas forem verdadeiras
        if (condicao1 && (7 > 4)) {
            System.out.println("As duas condi√ß√µes s√£o verdadeiras");
        }

        // OU l√≥gico (OR): entra se pelo menos uma for verdadeira
        if (condicao1 || condicao2) {
            System.out.println("Pelo menos uma das condi√ß√µes √© verdadeira");
        }
    }
}
